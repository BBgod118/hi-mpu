# This Makefile is a sample file, do not use in product.
TOPDIR := $(shell pwd)
ROOT_DIR ?= $(TOPDIR)/../../../../..
REAL_TIME_DIR := $(ROOT_DIR)/src/real_time
UNIPROTON_SAMPLES_DIR := $(ROOT_DIR)/src/samples/real_time/uniproton
UNIPROTON_DIR := $(REAL_TIME_DIR)/uniproton
UNIPROTON_KERNEL_DIR := $(UNIPROTON_DIR)/UniProton-v1.0.1
UNIPROTON_DEMOS_DIR := $(UNIPROTON_KERNEL_DIR)/demos/hi3093
DRIVERS_DIR := $(REAL_TIME_DIR)/drivers
OSAL_DIR := $(ROOT_DIR)/platform/osal
OUTPUT_DIR := $(ROOT_DIR)/build/build_uniproton/output
LIBS_DIR := ${OUTPUT_DIR}/libs
UNIPROTON_CROSS_COMPILE := ${UNIPROTON_DIR}/gcc-arm-10.3-2021.07-x86_64-aarch64-none-elf/bin/aarch64-none-elf-

AS		= $(UNIPROTON_CROSS_COMPILE)as
LD		= $(UNIPROTON_CROSS_COMPILE)ld
CC		= $(UNIPROTON_CROSS_COMPILE)gcc
CPP		= $(CC) -E
AR		= $(UNIPROTON_CROSS_COMPILE)ar
NM		= $(UNIPROTON_CROSS_COMPILE)nm

STRIP		= $(UNIPROTON_CROSS_COMPILE)strip
OBJCOPY		= $(UNIPROTON_CROSS_COMPILE)objcopy
OBJDUMP		= $(UNIPROTON_CROSS_COMPILE)objdump

CFLAGS   := -fno-builtin -ffreestanding \
	-I$(DRIVERS_DIR)/include \
	-I$(UNIPROTON_SAMPLES_DIR)/common \
	-I$(UNIPROTON_SAMPLES_DIR)/driver/include \
	-I$(UNIPROTON_DEMOS_DIR)/include \
	-I$(UNIPROTON_DEMOS_DIR)/config \
	-I$(UNIPROTON_DEMOS_DIR)/bsp \
	-I$(UNIPROTON_DEMOS_DIR)/bsp/hi3093 \
	-I$(UNIPROTON_DEMOS_DIR)/bsp/uart \
	-I$(UNIPROTON_DEMOS_DIR)/apps/openamp \
	-I$(UNIPROTON_DEMOS_DIR)/build/open-amp/output/usr/local/include \
	-I$(UNIPROTON_DEMOS_DIR)/build/libmetal/output/usr/local/include \
	-I$(OSAL_DIR)/include \
	-O2 \
	-fstack-protector-strong


POSIX_OPTION := -D_POSIX_THREADS -D_POSIX_THREAD_PRIORITY_SCHEDULING -D_POSIX_PRIORITY_SCHEDULING \
				-D_POSIX_TIMERS -D_POSIX_CPUTIME -D_POSIX_THREAD_CPUTIME -D_POSIX_MONOTONIC_CLOCK \
				-D_POSIX_TIMEOUTS -D_POSIX_CLOCK_SELECTION -D_POSIX_THREAD_PRIO_PROTECT \
				-D_UNIX98_THREAD_MUTEX_ATTRIBUTES -D_POSIX_READER_WRITER_LOCKS

CC_OPTION := -g -march=armv8.2-a+nofp+nosimd -Wl,--build-id=none -fno-builtin -fno-PIE -Wall -fno-dwarf2-cfi-asm -O0 -mcmodel=large -fomit-frame-pointer -fzero-initialized-in-bss -fdollars-in-identifiers -ffunction-sections -fdata-sections -fno-common -fno-aggressive-loop-optimizations -fno-optimize-strlen -fno-schedule-insns -fno-inline-small-functions -fno-inline-functions-called-once -fno-strict-aliasing -fno-builtin -finline-limit=20 -mstrict-align -mlittle-endian -specs=nosys.specs -nostartfiles -funwind-tables
AS_OPTION := -g -march=armv8.2-a+nofp+nosimd -Wl,--build-id=none -fno-builtin -fno-PIE -Wall -fno-dwarf2-cfi-asm -O0 -mcmodel=large -fomit-frame-pointer -fzero-initialized-in-bss -fdollars-in-identifiers -ffunction-sections -fdata-sections -fno-common -fno-aggressive-loop-optimizations -fno-optimize-strlen -fno-schedule-insns -fno-inline-small-functions -fno-inline-functions-called-once -fno-strict-aliasing -fno-builtin -finline-limit=20 -mstrict-align -mlittle-endian -nostartfiles -mgeneral-regs-only -DENV_EL1

LINK_OPTION := -static -no-pie -Wl,--wrap=memset -Wl,--wrap=memcpy

CFLAGS += $(CC_OPTION)
CFLAGS += $(AS_OPTION)
CFLAGS += $(POSIX_OPTION)
CFLAGS += -D__UNIPROTON__ -D__DRIVER__

ASFLAGS := $(CFLAGS)

LDFLAGS := $(LINK_OPTION)

TARGET_LDS := $(UNIPROTON_SAMPLES_DIR)/common/hi309x.lds

ifneq ($(wildcard $(LIBS_DIR)/libCortexMXsec_c.lib),)
EXTEND_INCLUDE += $(LIBS_DIR)/libCortexMXsec_c.lib
else
$(error "can not find libCortexMXsec_c.lib")
endif

ifneq ($(wildcard $(LIBS_DIR)/libHI3093.a),)
EXTEND_INCLUDE += $(LIBS_DIR)/libHI3093.a
else
$(error "can not find liblibck.a")
endif

ifneq ($(wildcard $(LIBS_DIR)/libmetal.a),)
EXTEND_INCLUDE += $(LIBS_DIR)/libmetal.a
else
$(error "can not find libmetal.a")
endif

ifneq ($(wildcard $(LIBS_DIR)/libopen_amp.a),)
EXTEND_INCLUDE += $(LIBS_DIR)/libopen_amp.a
else
$(error "can not find libopen_amp.a")
endif

ifneq ($(wildcard $(LIBS_DIR)/libdriver.a),)
EXTEND_INCLUDE += $(LIBS_DIR)/libdriver.a
else
$(error "can not find libdriver.a")
endif

EXTEND_INCLUDE += -lc --specs=nosys.specs

SOURCE  := $(wildcard *.c) $(wildcard *.S)
SOURCE  += $(wildcard $(UNIPROTON_SAMPLES_DIR)/common/*.c)
SOURCE  += $(wildcard $(UNIPROTON_KERNEL_DIR)/demos/hi3093/apps/openamp/*.c)
SOURCE  += $(wildcard $(UNIPROTON_KERNEL_DIR)/demos/hi3093/bsp/*.c)
SOURCE  += $(wildcard $(UNIPROTON_KERNEL_DIR)/demos/hi3093/bsp/*.S)
SOURCE  += $(wildcard $(UNIPROTON_KERNEL_DIR)/demos/hi3093/bsp/uart/*.c)
SOURCE  += $(wildcard $(UNIPROTON_KERNEL_DIR)/demos/hi3093/config/*.c)

OBJS    := $(patsubst %.c,%.o,$(patsubst %.S,%.o,$(SOURCE)))

export CFLAGS LDFLAGS

TARGET := $(TARGET_NAME)

TARGET_CORE3 := $(TARGET_NAME)_core3

$(TARGET):$(TARGET_CORE2) $(TARGET_CORE3)

$(TARGET_CORE3):$(OBJS)
	$(CC) $(LDFLAGS) -T $(TARGET_LDS) $(OBJS) $(LIB_INCLUDE) -Wl,--gc-sections -Wl,--start-group $(EXTEND_INCLUDE) -Wl,--end-group -o $@.elf \
	-Wl,-Map=$@.map
	$(OBJCOPY) --gap-fill=0xff -O binary $@.elf $@.bin
	$(OBJDUMP) -d  $@.elf > $@.asm

%.o : %.c
	$(CC) $(CFLAGS) -c -o $@ $<

%.o: %.S
	$(CC) -D__ASSEMBLY__ $(CFLAGS) -o $@ $< -c

clean:
	rm -f $(shell find -name "*.o")
	rm -f $(shell find -name "*.elf")
	rm -f $(shell find -name "*.map")
	rm -f $(shell find -name "*.bin")
	rm -f $(shell find -name "*.asm")
	rm -rf $(UNIPROTON_SAMPLES_DIR)/common/*.o
	rm -rf $(UNIPROTON_SAMPLES_DIR)/common/*.i
	rm -rf $(UNIPROTON_KERNEL_DIR)/demos/hi3093/apps/openamp/*.o
	rm -rf $(UNIPROTON_KERNEL_DIR)/demos/hi3093/bsp/*.o
	rm -rf $(UNIPROTON_KERNEL_DIR)/demos/hi3093/bsp/uart/*.o
	rm -rf $(UNIPROTON_KERNEL_DIR)/demos/hi3093/config/*.o
	rm -f $(shell find -name "*.i")
